{"remainingRequest":"D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\src\\utils\\request.js","dependencies":[{"path":"D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\src\\utils\\request.js","mtime":1589903405510},{"path":"D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"D:\\\\Death in TJU\\\\Junior_2nd\\\\\\u4E13\\u9879\\u7EFC\\u5408\\\\Project\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport Vue from 'vue';\nimport axios, { AxiosInstance as Axios } from 'axios';\nimport store from '@/store';\nimport { VueAxios } from './axios';\nimport notification from 'ant-design-vue/es/notification';\nimport { ACCESS_TOKEN } from '@/store/mutation-types'; // 创建 axios 实例\n\nvar service = axios.create({\n  baseURL: 'http://localhost:8080',\n  // api base_url\n  //withCredentials: true,\n  timeout: 6000 // 请求超时时间\n\n});\n\nvar err = function err(error) {\n  if (error.response) {\n    var data = error.response.data;\n    var token = Vue.ls.get(ACCESS_TOKEN);\n\n    if (error.response.status === 403) {\n      notification.error({\n        message: 'Forbidden',\n        description: data.message\n      });\n    }\n\n    if (error.response.status === 401 && !(data.result && data.result.isLogin)) {\n      notification.error({\n        message: 'Unauthorized',\n        description: 'Authorization verification failed'\n      });\n\n      if (token) {\n        store.dispatch('Logout').then(function () {\n          setTimeout(function () {\n            window.location.reload();\n          }, 1500);\n        });\n      }\n    }\n  }\n\n  return _Promise.reject(error);\n}; // request interceptor\n\n\nservice.interceptors.request.use(function (config) {\n  var token = Vue.ls.get(ACCESS_TOKEN);\n\n  if (token) {\n    config.headers['Access-Token'] = token; // 让每个请求携带自定义 token 请根据实际情况自行修改\n  }\n\n  return config;\n}, err); // response interceptor\n\nservice.interceptors.response.use(function (response) {\n  return response.data;\n}, err);\nvar installer = {\n  vm: {},\n  install: function install(Vue) {\n    Vue.use(VueAxios, service);\n  }\n};\nexport { installer as VueAxios, service as axios };",{"version":3,"sources":["D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\src\\utils\\request.js"],"names":["Vue","axios","AxiosInstance","Axios","store","VueAxios","notification","ACCESS_TOKEN","service","create","baseURL","timeout","err","error","response","data","token","ls","get","status","message","description","result","isLogin","dispatch","then","setTimeout","window","location","reload","reject","interceptors","request","use","config","headers","installer","vm","install"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,KAAP,IAAeC,aAAa,IAAIC,KAAhC,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACEC,QADF,QAEO,SAFP;AAGA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SACEC,YADF,QAEO,wBAFP,C,CAOA;;AACA,IAAMC,OAAO,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAE,uBADkB;AACO;AAClC;AACAC,EAAAA,OAAO,EAAE,IAHkB,CAGb;;AAHa,CAAb,CAAhB;;AAOA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB,MAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,QAAMC,IAAI,GAAGF,KAAK,CAACC,QAAN,CAAeC,IAA5B;AACA,QAAMC,KAAK,GAAGhB,GAAG,CAACiB,EAAJ,CAAOC,GAAP,CAAWX,YAAX,CAAd;;AACA,QAAIM,KAAK,CAACC,QAAN,CAAeK,MAAf,KAA0B,GAA9B,EAAmC;AACjCb,MAAAA,YAAY,CAACO,KAAb,CAAmB;AACjBO,QAAAA,OAAO,EAAE,WADQ;AAEjBC,QAAAA,WAAW,EAAEN,IAAI,CAACK;AAFD,OAAnB;AAID;;AACD,QAAIP,KAAK,CAACC,QAAN,CAAeK,MAAf,KAA0B,GAA1B,IAAiC,EAAEJ,IAAI,CAACO,MAAL,IAAeP,IAAI,CAACO,MAAL,CAAYC,OAA7B,CAArC,EAA4E;AAC1EjB,MAAAA,YAAY,CAACO,KAAb,CAAmB;AACjBO,QAAAA,OAAO,EAAE,cADQ;AAEjBC,QAAAA,WAAW,EAAE;AAFI,OAAnB;;AAIA,UAAIL,KAAJ,EAAW;AACTZ,QAAAA,KAAK,CAACoB,QAAN,CAAe,QAAf,EAAyBC,IAAzB,CAA8B,YAAM;AAClCC,UAAAA,UAAU,CAAC,YAAM;AACfC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,WAFS,EAEP,IAFO,CAAV;AAGD,SAJD;AAKD;AACF;AACF;;AACD,SAAO,SAAQC,MAAR,CAAejB,KAAf,CAAP;AACD,CAzBD,C,CA2BA;;;AACAL,OAAO,CAACuB,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACzC,MAAMlB,KAAK,GAAGhB,GAAG,CAACiB,EAAJ,CAAOC,GAAP,CAAWX,YAAX,CAAd;;AACA,MAAIS,KAAJ,EAAW;AACTkB,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCnB,KAAjC,CADS,CAC8B;AACxC;;AACD,SAAOkB,MAAP;AACD,CAND,EAMGtB,GANH,E,CAQA;;AACAJ,OAAO,CAACuB,YAAR,CAAqBjB,QAArB,CAA8BmB,GAA9B,CAAkC,UAACnB,QAAD,EAAc;AAC9C,SAAOA,QAAQ,CAACC,IAAhB;AACD,CAFD,EAEGH,GAFH;AAIA,IAAMwB,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE,EADY;AAEhBC,EAAAA,OAFgB,mBAERtC,GAFQ,EAEH;AACXA,IAAAA,GAAG,CAACiC,GAAJ,CAAQ5B,QAAR,EAAkBG,OAAlB;AACD;AAJe,CAAlB;AAOA,SACE4B,SAAS,IAAI/B,QADf,EAEEG,OAAO,IAAIP,KAFb","sourcesContent":["import Vue from 'vue'\r\nimport axios, {AxiosInstance as Axios} from 'axios'\r\nimport store from '@/store'\r\nimport {\r\n  VueAxios\r\n} from './axios'\r\nimport notification from 'ant-design-vue/es/notification'\r\nimport {\r\n  ACCESS_TOKEN\r\n} from '@/store/mutation-types'\r\n\r\n\r\n\r\n\r\n// 创建 axios 实例\r\nconst service = axios.create({\r\n  baseURL: 'http://localhost:8080', // api base_url\r\n  //withCredentials: true,\r\n  timeout: 6000 // 请求超时时间\r\n})\r\n\r\n\r\nconst err = (error) => {\r\n  if (error.response) {\r\n    const data = error.response.data\r\n    const token = Vue.ls.get(ACCESS_TOKEN)\r\n    if (error.response.status === 403) {\r\n      notification.error({\r\n        message: 'Forbidden',\r\n        description: data.message\r\n      })\r\n    }\r\n    if (error.response.status === 401 && !(data.result && data.result.isLogin)) {\r\n      notification.error({\r\n        message: 'Unauthorized',\r\n        description: 'Authorization verification failed'\r\n      })\r\n      if (token) {\r\n        store.dispatch('Logout').then(() => {\r\n          setTimeout(() => {\r\n            window.location.reload()\r\n          }, 1500)\r\n        })\r\n      }\r\n    }\r\n  }\r\n  return Promise.reject(error)\r\n}\r\n\r\n// request interceptor\r\nservice.interceptors.request.use(config => {\r\n  const token = Vue.ls.get(ACCESS_TOKEN)\r\n  if (token) {\r\n    config.headers['Access-Token'] = token // 让每个请求携带自定义 token 请根据实际情况自行修改\r\n  }\r\n  return config\r\n}, err)\r\n\r\n// response interceptor\r\nservice.interceptors.response.use((response) => {\r\n  return response.data\r\n}, err)\r\n\r\nconst installer = {\r\n  vm: {},\r\n  install(Vue) {\r\n    Vue.use(VueAxios, service)\r\n  }\r\n}\r\n\r\nexport {\r\n  installer as VueAxios,\r\n  service as axios\r\n}\r\n"]}]}