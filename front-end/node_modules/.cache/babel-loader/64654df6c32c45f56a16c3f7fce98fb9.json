{"remainingRequest":"D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\src\\views\\user\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\src\\views\\user\\Register.vue","mtime":1591241480782},{"path":"D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Death in TJU\\Junior_2nd\\专项综合\\Project\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mixinDevice } from '@/utils/mixin.js';\nimport { getSmsCaptcha, verifyName, register } from '@/api/login';\nvar levelNames = {\n  0: '低',\n  1: '低',\n  2: '中',\n  3: '强'\n};\nvar levelClass = {\n  0: 'error',\n  1: 'error',\n  2: 'warning',\n  3: 'success'\n};\nvar levelColor = {\n  0: '#ff0000',\n  1: '#ff0000',\n  2: '#ff7e05',\n  3: '#52c41a'\n};\nexport default {\n  name: 'Register',\n  components: {},\n  mixins: [mixinDevice],\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        smsSendBtn: false,\n        passwordLevel: 0,\n        passwordLevelChecked: false,\n        percent: 10,\n        progressColor: '#FF0000'\n      },\n      registerBtn: false,\n      verifyBtn: false\n    };\n  },\n  computed: {\n    passwordLevelClass: function passwordLevelClass() {\n      return levelClass[this.state.passwordLevel];\n    },\n    passwordLevelName: function passwordLevelName() {\n      return levelNames[this.state.passwordLevel];\n    },\n    passwordLevelColor: function passwordLevelColor() {\n      return levelColor[this.state.passwordLevel];\n    }\n  },\n  methods: {\n    handlePasswordLevel: function handlePasswordLevel(rule, value, callback) {\n      var level = 0; // 判断这个字符串中有没有数字\n\n      if (/[0-9]/.test(value)) {\n        level++;\n      } // 判断字符串中有没有字母\n\n\n      if (/[a-zA-Z]/.test(value)) {\n        level++;\n      } // 判断字符串中有没有特殊符号\n\n\n      if (/[^0-9a-zA-Z_]/.test(value)) {\n        level++;\n      }\n\n      this.state.passwordLevel = level;\n      this.state.percent = level * 30;\n\n      if (level >= 2) {\n        if (level >= 3) {\n          this.state.percent = 100;\n        }\n\n        callback();\n      } else {\n        if (level === 0) {\n          this.state.percent = 10;\n        }\n\n        callback(new Error('密码强度不够'));\n      }\n    },\n    handlePasswordCheck: function handlePasswordCheck(rule, value, callback) {\n      var password = this.form.getFieldValue('password');\n      console.log('value', value);\n\n      if (value === undefined) {\n        callback(new Error('请输入密码'));\n      }\n\n      if (value && password && value.trim() !== password.trim()) {\n        callback(new Error('两次密码不一致'));\n      }\n\n      callback();\n    },\n    handlePasswordInputClick: function handlePasswordInputClick() {\n      if (!this.isMobile()) {\n        this.state.passwordLevelChecked = true;\n        return;\n      }\n\n      this.state.passwordLevelChecked = false;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n\n      var h = this.$createElement;\n      var email = this.form.getFieldValue('email');\n      var pwd = this.form.getFieldValue(\"password\");\n\n      if (!email || email === '') {\n        return;\n      }\n\n      if (!pwd || pwd === '') {\n        return;\n      }\n\n      setTimeout(function () {\n        register({\n          Name: email,\n          Pwd: pwd\n        }).then(function (response) {\n          console.log(response);\n\n          if (response.Code === 200) {\n            _this.$notification.open({\n              message: '注册成功',\n              description: '请登录',\n              icon: h(\"a-icon\", {\n                \"attrs\": {\n                  \"type\": \"check\"\n                },\n                \"style\": \"color: #108ee9\"\n              })\n            }); //const { form: { validateFields }, state, $router } = this\n\n\n            _this.$router.push({\n              name: 'login'\n            });\n          } else {\n            _this.$notification.open({\n              message: '检测失败',\n              description: '该用户名已被占用',\n              icon: h(\"a-icon\", {\n                \"attrs\": {\n                  \"type\": \"warning\"\n                },\n                \"style\": \"color: #108ee9\"\n              })\n            });\n          }\n        });\n      }, 1000);\n      /*\r\n      const { form: { validateFields }, state, $router } = this\r\n      validateFields({ force: true }, (err, values) => {\r\n        if (!err) {\r\n          state.passwordLevelChecked = false\r\n          $router.push({ name: 'registerResult', params: { ...values } })\r\n        }\r\n      })\r\n      */\n    },\n    getCaptcha: function getCaptcha(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var validateFields = this.form.validateFields,\n          state = this.state,\n          $message = this.$message,\n          $notification = this.$notification;\n      validateFields(['mobile'], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          state.smsSendBtn = true;\n          var interval = window.setInterval(function () {\n            if (state.time-- <= 0) {\n              state.time = 60;\n              state.smsSendBtn = false;\n              window.clearInterval(interval);\n            }\n          }, 1000);\n          var hide = $message.loading('验证码发送中..', 0);\n          getSmsCaptcha({\n            mobile: values.mobile\n          }).then(function (res) {\n            console.log(\"res\", res);\n            setTimeout(hide, 2500);\n            $notification['success']({\n              message: '提示',\n              description: '验证码获取成功，您的验证码为：' + res,\n              duration: 8\n            });\n          }).catch(function (err) {\n            setTimeout(hide, 1);\n            clearInterval(interval);\n            state.time = 60;\n            state.smsSendBtn = false;\n\n            _this2.requestFailed(err);\n          });\n        }\n      });\n    },\n    onVerify: function onVerify() {\n      var _this3 = this;\n\n      var h = this.$createElement;\n      var email = this.form.getFieldValue('email');\n\n      if (!email || email === '') {\n        return;\n      }\n\n      console.log(\"email\", email);\n      setTimeout(function () {\n        verifyName(email).then(function (response) {\n          console.log(response);\n\n          if (response.Code === 200) {\n            _this3.$notification.open({\n              message: '检验成功',\n              description: '该用户名可使用',\n              icon: h(\"a-icon\", {\n                \"attrs\": {\n                  \"type\": \"check\"\n                },\n                \"style\": \"color: #108ee9\"\n              })\n            });\n          } else {\n            _this3.$notification.open({\n              message: '检测失败',\n              description: '该用户名已被占用',\n              icon: h(\"a-icon\", {\n                \"attrs\": {\n                  \"type\": \"warning\"\n                },\n                \"style\": \"color: #108ee9\"\n              })\n            });\n          }\n        }); //this.reload()\n      }, 1000);\n      this.verifyBtn = false;\n    },\n    requestFailed: function requestFailed(err) {\n      this.$notification['error']({\n        message: '错误',\n        description: ((err.response || {}).data || {}).message || '请求出现错误，请稍后再试',\n        duration: 4\n      });\n      this.registerBtnregisterBtn = false;\n    }\n  },\n  watch: {\n    'state.passwordLevel': function statePasswordLevel(val) {\n      console.log(val);\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"main user-layout-register\">\r\n    <h3><span>注册</span></h3>\r\n    <a-form ref=\"formRegister\" :form=\"form\" id=\"formRegister\">\r\n        <a-row :gutter=\"16\">\r\n        <a-col class=\"gutter-row\" :span=\"16\">\r\n          <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n          type=\"text\"\r\n          placeholder=\"用户名\"\r\n          v-decorator=\"['email', {rules: [{ required: true, type: 'email', message: '请输入用户名' }], validateTrigger: ['change', 'blur']}]\"\r\n        ></a-input>\r\n          </a-form-item>\r\n        </a-col>\r\n        <a-col class=\"gutter-row\" :span=\"8\">\r\n        <a-button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          :loading=\"verifyBtn\"\r\n          @click.stop.prevent=\"onVerify\"\r\n          :disabled=\"verifyBtn\">检验\r\n        </a-button>\r\n        </a-col>\r\n      </a-row>\r\n\r\n      <a-popover\r\n        placement=\"rightTop\"\r\n        :trigger=\"['focus']\"\r\n        :getPopupContainer=\"(trigger) => trigger.parentElement\"\r\n        v-model=\"state.passwordLevelChecked\">\r\n        <template slot=\"content\">\r\n          <div :style=\"{ width: '240px' }\" >\r\n            <div :class=\"['user-register', passwordLevelClass]\">强度：<span>{{ passwordLevelName }}</span></div>\r\n            <a-progress :percent=\"state.percent\" :showInfo=\"false\" :strokeColor=\" passwordLevelColor \" />\r\n            <div style=\"margin-top: 10px;\">\r\n              <span>请至少输入 6 个字符。请不要使用容易被猜到的密码。</span>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <a-form-item>\r\n          <a-input\r\n            size=\"large\"\r\n            type=\"password\"\r\n            @click=\"handlePasswordInputClick\"\r\n            autocomplete=\"false\"\r\n            placeholder=\"至少6位密码，区分大小写\"\r\n            v-decorator=\"['password', {rules: [{ required: true, message: '至少6位密码，区分大小写'}, { validator: this.handlePasswordLevel }], validateTrigger: ['change', 'blur']}]\"\r\n          ></a-input>\r\n        </a-form-item>\r\n      </a-popover>\r\n\r\n      <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n          type=\"password\"\r\n          autocomplete=\"false\"\r\n          placeholder=\"确认密码\"\r\n          v-decorator=\"['password2', {rules: [{ required: true, message: '至少6位密码，区分大小写' }, { validator: this.handlePasswordCheck }], validateTrigger: ['change', 'blur']}]\"\r\n        ></a-input>\r\n      </a-form-item>\r\n\r\n      <a-row :gutter=\"16\">\r\n        <a-col class=\"gutter-row\" :span=\"16\">\r\n          <a-form-item>\r\n            <a-input size=\"large\" type=\"text\" placeholder=\"验证码\" v-decorator=\"['captcha', {rules: [{ required: true, message: '请输入验证码' }], validateTrigger: 'blur'}]\">\r\n              <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n            </a-input>\r\n          </a-form-item>\r\n        </a-col>\r\n        <a-col class=\"gutter-row\" :span=\"8\">\r\n          <a-button\r\n            class=\"getCaptcha\"\r\n            size=\"large\"\r\n            :disabled=\"state.smsSendBtn\"\r\n            @click.stop.prevent=\"getCaptcha\"\r\n            v-text=\"!state.smsSendBtn && '获取'||(state.time+' s')\"></a-button>\r\n        </a-col>\r\n      </a-row>\r\n\r\n      <a-form-item>\r\n        <a-button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          class=\"register-button\"\r\n          :loading=\"registerBtn\"\r\n          @click.stop.prevent=\"handleSubmit\"\r\n          :disabled=\"registerBtn\">注册\r\n        </a-button>\r\n        <router-link class=\"login\" :to=\"{ name: 'login' }\">使用已有账户登录</router-link>\r\n      </a-form-item>\r\n\r\n    </a-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mixinDevice } from '@/utils/mixin.js'\r\nimport { getSmsCaptcha, verifyName, register } from '@/api/login'\r\n\r\nconst levelNames = {\r\n  0: '低',\r\n  1: '低',\r\n  2: '中',\r\n  3: '强'\r\n}\r\nconst levelClass = {\r\n  0: 'error',\r\n  1: 'error',\r\n  2: 'warning',\r\n  3: 'success'\r\n}\r\nconst levelColor = {\r\n  0: '#ff0000',\r\n  1: '#ff0000',\r\n  2: '#ff7e05',\r\n  3: '#52c41a'\r\n}\r\nexport default {\r\n  name: 'Register',\r\n  components: {\r\n  },\r\n  mixins: [mixinDevice],\r\n  data () {\r\n    return {\r\n      form: this.$form.createForm(this),\r\n\r\n      state: {\r\n        time: 60,\r\n        smsSendBtn: false,\r\n        passwordLevel: 0,\r\n        passwordLevelChecked: false,\r\n        percent: 10,\r\n        progressColor: '#FF0000'\r\n      },\r\n      registerBtn: false,\r\n      verifyBtn: false,\r\n    }\r\n\r\n  },\r\n  computed: {\r\n    passwordLevelClass () {\r\n      return levelClass[this.state.passwordLevel]\r\n    },\r\n    passwordLevelName () {\r\n      return levelNames[this.state.passwordLevel]\r\n    },\r\n    passwordLevelColor () {\r\n      return levelColor[this.state.passwordLevel]\r\n    }\r\n  },\r\n  methods: {\r\n    handlePasswordLevel (rule, value, callback) {\r\n      let level = 0\r\n\r\n      // 判断这个字符串中有没有数字\r\n      if (/[0-9]/.test(value)) {\r\n        level++\r\n      }\r\n      // 判断字符串中有没有字母\r\n      if (/[a-zA-Z]/.test(value)) {\r\n        level++\r\n      }\r\n      // 判断字符串中有没有特殊符号\r\n      if (/[^0-9a-zA-Z_]/.test(value)) {\r\n        level++\r\n      }\r\n      this.state.passwordLevel = level\r\n      this.state.percent = level * 30\r\n      if (level >= 2) {\r\n        if (level >= 3) {\r\n          this.state.percent = 100\r\n        }\r\n        callback()\r\n      } else {\r\n        if (level === 0) {\r\n          this.state.percent = 10\r\n        }\r\n        callback(new Error('密码强度不够'))\r\n      }\r\n    },\r\n\r\n    handlePasswordCheck (rule, value, callback) {\r\n      const password = this.form.getFieldValue('password')\r\n      console.log('value', value)\r\n      if (value === undefined) {\r\n        callback(new Error('请输入密码'))\r\n      }\r\n      if (value && password && value.trim() !== password.trim()) {\r\n        callback(new Error('两次密码不一致'))\r\n      }\r\n      callback()\r\n    },\r\n\r\n\r\n    handlePasswordInputClick () {\r\n      if (!this.isMobile()) {\r\n        this.state.passwordLevelChecked = true\r\n        return\r\n      }\r\n      this.state.passwordLevelChecked = false\r\n    },\r\n\r\n    handleSubmit () {\r\n      let email =  this.form.getFieldValue('email')\r\n      let pwd = this.form.getFieldValue(\"password\")\r\n      if(!email || email === ''){\r\n        return\r\n      }\r\n      if(!pwd || pwd === ''){\r\n        return\r\n      }\r\n      setTimeout(() => {\r\n        register({Name:email, Pwd:pwd}).then( response => {\r\n          console.log(response)\r\n          if(response.Code === 200){\r\n            this.$notification.open({\r\n              message: '注册成功',\r\n                  description: '请登录',\r\n                  icon: <a-icon type=\"check\" style=\"color: #108ee9\" />,\r\n              });\r\n            //const { form: { validateFields }, state, $router } = this\r\n            this.$router.push({ name: 'login'})\r\n          }else{\r\n            this.$notification.open({\r\n                message: '检测失败',\r\n                description: '该用户名已被占用',\r\n                icon: <a-icon type=\"warning\" style=\"color: #108ee9\" />,\r\n            });\r\n          }\r\n        })\r\n      }, 1000);\r\n      /*\r\n      const { form: { validateFields }, state, $router } = this\r\n      validateFields({ force: true }, (err, values) => {\r\n        if (!err) {\r\n          state.passwordLevelChecked = false\r\n          $router.push({ name: 'registerResult', params: { ...values } })\r\n        }\r\n      })\r\n      */\r\n    },\r\n\r\n    getCaptcha (e) {\r\n      e.preventDefault()\r\n      const { form: { validateFields }, state, $message, $notification } = this\r\n\r\n      validateFields(['mobile'], { force: true },\r\n        (err, values) => {\r\n          if (!err) {\r\n            state.smsSendBtn = true\r\n\r\n            const interval = window.setInterval(() => {\r\n              if (state.time-- <= 0) {\r\n                state.time = 60\r\n                state.smsSendBtn = false\r\n                window.clearInterval(interval)\r\n              }\r\n            }, 1000)\r\n\r\n            const hide = $message.loading('验证码发送中..', 0)\r\n\r\n            getSmsCaptcha({ mobile: values.mobile }).then(res => {\r\n              console.log(\"res\", res)\r\n              setTimeout(hide, 2500)\r\n              $notification['success']({\r\n                message: '提示',\r\n                description: '验证码获取成功，您的验证码为：' + res,\r\n                duration: 8\r\n              })\r\n            }).catch(err => {\r\n              setTimeout(hide, 1)\r\n              clearInterval(interval)\r\n              state.time = 60\r\n              state.smsSendBtn = false\r\n              this.requestFailed(err)\r\n            })\r\n          }\r\n        }\r\n      )\r\n    },\r\n\r\n    onVerify() {\r\n        let email =  this.form.getFieldValue('email')\r\n        if(!email || email === ''){\r\n          return\r\n        }\r\n        console.log(\"email\", email)\r\n\r\n        setTimeout(() => {\r\n\r\n            verifyName(email).then( response => {\r\n              console.log(response)\r\n              if(response.Code === 200){\r\n                this.$notification.open({\r\n                  message: '检验成功',\r\n                  description: '该用户名可使用',\r\n                  icon: <a-icon type=\"check\" style=\"color: #108ee9\" />,\r\n                });\r\n\r\n              }else{\r\n                this.$notification.open({\r\n                  message: '检测失败',\r\n                  description: '该用户名已被占用',\r\n                  icon: <a-icon type=\"warning\" style=\"color: #108ee9\" />,\r\n                });\r\n              }\r\n            })\r\n            //this.reload()\r\n        }, 1000);\r\n        this.verifyBtn = false\r\n    },\r\n\r\n\r\n\r\n\r\n    requestFailed (err) {\r\n      this.$notification['error']({\r\n        message: '错误',\r\n        description: ((err.response || {}).data || {}).message || '请求出现错误，请稍后再试',\r\n        duration: 4\r\n      })\r\n      this.registerBtnregisterBtn = false\r\n    }\r\n  },\r\n  watch: {\r\n    'state.passwordLevel' (val) {\r\n      console.log(val)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n  .user-register {\r\n\r\n    &.error {\r\n      color: #ff0000;\r\n    }\r\n\r\n    &.warning {\r\n      color: #ff7e05;\r\n    }\r\n\r\n    &.success {\r\n      color: #52c41a;\r\n    }\r\n\r\n  }\r\n\r\n  .user-layout-register {\r\n    .ant-input-group-addon:first-child {\r\n      background-color: #fff;\r\n    }\r\n  }\r\n</style>\r\n<style lang=\"less\" scoped>\r\n  .user-layout-register {\r\n\r\n    & > h3 {\r\n      font-size: 16px;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .getCaptcha {\r\n      display: block;\r\n      width: 100%;\r\n      height: 40px;\r\n    }\r\n\r\n    .register-button {\r\n      width: 50%;\r\n    }\r\n\r\n    .login {\r\n      float: right;\r\n      line-height: 40px;\r\n    }\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/user"}]}